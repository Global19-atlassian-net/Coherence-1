<Project Sdk="Microsoft.NET.Sdk">
  
  <Target Name="Package" DependsOnTargets="RunVerifier;RunSplitPackages" />

  <Target Name="RunVerifier">
    <Error Text="BUILD_SHARE not specified." Condition="'$(BUILD_SHARE)'==''" />
    
    <PropertyGroup>
      <BUILD_BRANCH Condition="'$(BUILD_BRANCH)'==''">dev</BUILD_BRANCH>
      <COHERENCE_UNIVERSECOHERENCE_BUILD_NUMBER Condition="'$(COHERENCE_UNIVERSECOHERENCE_BUILD_NUMBER)'==''">Latest</COHERENCE_UNIVERSECOHERENCE_BUILD_NUMBER>
      <COHERENCE_CORECLR_BUILD_NUMBER Condition="'$(COHERENCE_CORECLR_BUILD_NUMBER)'==''">Latest</COHERENCE_CORECLR_BUILD_NUMBER>
      <DISABLE_PARTNER_COHERENCE_CHECK Condition="'$(DISABLE_PARTNER_COHERENCE_CHECK)'==''">false</DISABLE_PARTNER_COHERENCE_CHECK>
    </PropertyGroup>
    
    <ItemGroup>
      <VerifierArgsList Include="
          --drop-folder &quot;$(BUILD_SHARE) &quot;;
          --build-branch $(BUILD_BRANCH);
          --output-path &quot;$(ArtifactsDir) &quot;;
          --universecoherence-build $(COHERENCE_UNIVERSECOHERENCE_BUILD_NUMBER);
          --coreclr-build $(COHERENCE_CORECLR_BUILD_NUMBER)"/>
      
      <VerifierArgsList Include="--disable-product-package-verification" Condition="'$(DISABLE_COHERENCE_CHECK)'=='true'"/>
      <VerifierArgsList Include="--disable-partner-package-verification" Condition="'$(DISABLE_PARTNER_COHERENCE_CHECK)'=='true'"/>
    </ItemGroup>
    
    <PropertyGroup>
      <VerifierProjectDirectory>$(RepositoryRoot)src\CoherenceBuild\</VerifierProjectDirectory>
      <NuGetPublishFeed>https://dotnet.myget.org/f/aspnetcore-ci-dev</NuGetPublishFeed>
      <VerifierArgs>@(VerifierArgsList, ' ')</VerifierArgs>
    </PropertyGroup>

    <Exec Command="dotnet run $(VerifierArgs)" WorkingDirectory="$(VerifierProjectDirectory)" />
  </Target>

  <Target Name="RunSplitPackages" DependsOnTargets="RunResolvePackageDependencies">
    <ItemGroup>
      <SplitPackagePath Include="%(PackageDefinitions.ResolvedPath)" Condition="'%(PackageDefinitions.Name)'=='SplitPackages'" />
    </ItemGroup>
    <PropertyGroup>
      <SplitPackagesCsv>$(RepositoryRoot)packages\packages.csv</SplitPackagesCsv>
      <SplitPackagesBinary>@(SplitPackagePath)\SplitPackages.exe</SplitPackagesBinary>
      <SplitPackagesArgs>--source $(BuildDir) --csv $(SplitPackagesCsv) --destination $(ArtifactsDir)</SplitPackagesArgs>
    </PropertyGroup>

    <Exec Command="$(SplitPackagesBinary) $(SplitPackagesArgs)" />
  </Target>

</Project>